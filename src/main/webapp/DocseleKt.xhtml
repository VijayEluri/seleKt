<?xml version="1.0"
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>The Language seleKt</title>
<meta name="generator" content="http://txt2tags.sf.net" />
</head>
<body bgcolor="white" text="black">
<div align="center">
<h1>The Language seleKt</h1>
<h2>BNF Converter</h2>
</div>

<p>
This document was automatically generated by the <i>BNF-Converter</i>. It was generated together with the lexer, the parser, and the abstract syntax module, which guarantees that the document matches with the implementation of the language (provided no hand-hacking has taken place).
</p>
<h2>The lexical structure of seleKt</h2>
<h3>Identifiers</h3>
<p>
Identifiers <i>Ident</i> are unquoted strings beginning with a letter,
followed by any combination of letters, digits, and the characters <code>_ '</code>
reserved words excluded.
</p>
<h3>Literals</h3>
<p>
Integer literals <i>Integer</i> are nonempty sequences of digits.
</p>
<p>
String literals <i>String</i> have the form
<code>"</code><i>x</i><code>"</code>}, where <i>x</i> is any sequence of any characters
except <code>"</code> unless preceded by <code>\</code>.
</p>
<p>
Double-precision float literals <i>Double</i> have the structure
indicated by the regular expression <code>digit+ '.' digit+ ('e' ('-')? digit+)?</code> i.e.\
two sequences of digits separated by a decimal point, optionally
followed by an unsigned or negative exponent.
</p>
<p>
UIdent literals are recognized by the regular expression
<code>`</code>upper (letter | digit | '_')*<code>`</code>
</p>
<p>
LIdent literals are recognized by the regular expression
<code>`</code>lower (letter | digit | '_')*<code>`</code>
</p>
<p>
Wild literals are recognized by the regular expression
<code>`</code>'_' char*<code>`</code>
</p>
<p>
UUID literals are recognized by the regular expression
<code>`</code>["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] '-' ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] '-' ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] '-' ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] '-' ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] '-' ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"] ["ABCDEF0123456789"]<code>`</code>
</p>
<h3>Reserved words and symbols</h3>
<p>
The set of reserved words is the set of terminals appearing in the grammar. Those reserved words that consist of non-letter characters are called symbols, and they are treated in a different way from those that are similar to identifiers. The lexer follows rules familiar from languages like Haskell, C, and Java, including longest match and spacing conventions.
</p>
<p>
The reserved words used in seleKt are the following:
</p>
<table align="center" cellpadding="4">
<tr>
<td><code>None</code></td>
<td><code>acknowledge</code></td>
<td><code>answer</code></td>
<td><code>ask</code></td>
</tr>
<tr>
<td><code>body</code></td>
<td><code>false</code></td>
<td><code>fetchRequest</code></td>
<td><code>fetchResponse</code></td>
</tr>
<tr>
<td><code>getRequest</code></td>
<td><code>getResponse</code></td>
<td><code>headers</code></td>
<td><code>notok</code></td>
</tr>
<tr>
<td><code>null</code></td>
<td><code>ok</code></td>
<td><code>publishRequest</code></td>
<td><code>publishResponse</code></td>
</tr>
<tr>
<td><code>putRequest</code></td>
<td><code>putResponse</code></td>
<td><code>request</code></td>
<td><code>response</code></td>
</tr>
<tr>
<td><code>storeRequest</code></td>
<td><code>storeResponse</code></td>
<td><code>subscribeRequest</code></td>
<td><code>subscribeResponse</code></td>
</tr>
<tr>
<td><code>tell</code></td>
<td><code>true</code></td>
<td></td>
</tr>
</table>

<p>
The symbols used in seleKt are the following:
</p>
<table align="center" cellpadding="4">
<tr>
<td>{</td>
<td>,</td>
<td>}</td>
<td>"</td>
</tr>
<tr>
<td>:</td>
<td>[</td>
<td>]</td>
<td>$</td>
</tr>
<tr>
<td>/</td>
<td>.</td>
<td></td>
</tr>
</table>

<h3>Comments</h3>
<p>
There are no single-line comments in the grammar.There are no multiple-line comments in the grammar.
</p>
<h2>The syntactic structure of seleKt</h2>
<p>
Non-terminals are enclosed between &lt; and &gt;. 
The symbols -&gt; (production),  <b>|</b>  (union) 
and <b>eps</b> (empty rule) belong to the BNF notation. 
All other symbols are terminals.
</p>
<table align="center" cellpadding="4">
<tr>
<td><i>Message</i></td>
<td>-&gt;</td>
<td><code>{</code> <i>LblReqHeader</i> <code>,</code> <i>LblReqBody</i> <code>}</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>{</code> <i>LblReqBody</i> <code>,</code> <i>LblReqHeader</i> <code>}</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>{</code> <i>LblRspHeader</i> <code>,</code> <i>LblRspBody</i> <code>}</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>{</code> <i>LblRspBody</i> <code>,</code> <i>LblRspHeader</i> <code>}</code></td>
</tr>
<tr>
<td><i>LblReqHeader</i></td>
<td>-&gt;</td>
<td><code>"</code> <code>headers</code> <code>"</code> <code>:</code> <i>ReqHeader</i></td>
</tr>
<tr>
<td><i>LblRspHeader</i></td>
<td>-&gt;</td>
<td><code>"</code> <code>headers</code> <code>"</code> <code>:</code> <i>RspHeader</i></td>
</tr>
<tr>
<td><i>LblReqBody</i></td>
<td>-&gt;</td>
<td><code>"</code> <code>body</code> <code>"</code> <code>:</code> <i>KVDBRequest</i></td>
</tr>
<tr>
<td><i>LblRspBody</i></td>
<td>-&gt;</td>
<td><code>"</code> <code>body</code> <code>"</code> <code>:</code> <i>KVDBResponse</i></td>
</tr>
<tr>
<td><i>ReqHeader</i></td>
<td>-&gt;</td>
<td><code>[</code> <i>URI</i> <code>,</code> <i>URI</i> <code>,</code> <i>UUID</i> <code>,</code> <i>UUID</i> <code>,</code> <i>ReqJust</i> <code>]</code></td>
</tr>
<tr>
<td><i>RspHeader</i></td>
<td>-&gt;</td>
<td><code>[</code> <i>URI</i> <code>,</code> <i>URI</i> <code>,</code> <i>UUID</i> <code>,</code> <i>UUID</i> <code>,</code> <i>RspJust</i> <code>]</code></td>
</tr>
<tr>
<td><i>KVDBRequest</i></td>
<td>-&gt;</td>
<td><code>{</code> <code>"</code> <i>AskReq</i> <code>"</code> <code>:</code> <i>AskReqPacket</i> <code>}</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>{</code> <code>"</code> <i>TellReq</i> <code>"</code> <code>:</code> <i>TellReqPacket</i> <code>}</code></td>
</tr>
<tr>
<td><i>KVDBResponse</i></td>
<td>-&gt;</td>
<td><code>{</code> <code>"</code> <i>AskRsp</i> <code>"</code> <code>:</code> <i>AskRspPacket</i> <code>}</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>{</code> <code>"</code> <i>TellRsp</i> <code>"</code> <code>:</code> <i>TellRspPacket</i> <code>}</code></td>
</tr>
<tr>
<td><i>AskReqPacket</i></td>
<td>-&gt;</td>
<td><code>{</code> <code>"</code> <code>ask</code> <code>"</code> <code>:</code> <i>Pattern</i> <code>}</code></td>
</tr>
<tr>
<td><i>AskRspPacket</i></td>
<td>-&gt;</td>
<td><code>{</code> <code>"</code> <code>answer</code> <code>"</code> <code>:</code> <code>[</code> <i>Pattern</i> <code>,</code> <i>Substitution</i> <code>,</code> <i>Blob</i> <code>]</code> <code>}</code></td>
</tr>
<tr>
<td><i>TellReqPacket</i></td>
<td>-&gt;</td>
<td><code>{</code> <code>"</code> <code>tell</code> <code>"</code> <code>:</code> <code>[</code> <i>Pattern</i> <code>,</code> <i>Blob</i> <code>]</code> <code>}</code></td>
</tr>
<tr>
<td><i>TellRspPacket</i></td>
<td>-&gt;</td>
<td><code>{</code> <code>"</code> <code>acknowledge</code> <code>"</code> <code>:</code> <i>Status</i> <code>}</code></td>
</tr>
<tr>
<td><i>ReqJust</i></td>
<td>-&gt;</td>
<td><code>None</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>{</code> <code>"</code> <code>response</code> <code>"</code> <code>:</code> <i>UUID</i> <code>}</code></td>
</tr>
<tr>
<td><i>RspJust</i></td>
<td>-&gt;</td>
<td><code>None</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>{</code> <code>"</code> <code>request</code> <code>"</code> <code>:</code> <i>UUID</i> <code>}</code></td>
</tr>
<tr>
<td><i>AskReq</i></td>
<td>-&gt;</td>
<td><code>getRequest</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>fetchRequest</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>subscribeRequest</code></td>
</tr>
<tr>
<td><i>TellReq</i></td>
<td>-&gt;</td>
<td><code>putRequest</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>storeRequest</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>publishRequest</code></td>
</tr>
<tr>
<td><i>AskRsp</i></td>
<td>-&gt;</td>
<td><code>getResponse</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>fetchResponse</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>subscribeResponse</code></td>
</tr>
<tr>
<td><i>TellRsp</i></td>
<td>-&gt;</td>
<td><code>putResponse</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>storeResponse</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>publishResponse</code></td>
</tr>
<tr>
<td><i>Status</i></td>
<td>-&gt;</td>
<td><code>ok</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>notok</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>Integer</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>String</i></td>
</tr>
<tr>
<td><i>Pattern</i></td>
<td>-&gt;</td>
<td><i>QryTerm</i></td>
</tr>
<tr>
<td><i>Blob</i></td>
<td>-&gt;</td>
<td><i>String</i></td>
</tr>
<tr>
<td><i>Substitution</i></td>
<td>-&gt;</td>
<td><code>{</code> <i>[SubstPair]</i> <code>}</code></td>
</tr>
<tr>
<td><i>SubstPair</i></td>
<td>-&gt;</td>
<td><code>"</code> <code>$</code> <i>UIdent</i> <code>"</code> <code>:</code> <i>QryTerm</i></td>
</tr>
<tr>
<td><i>QryTerm</i></td>
<td>-&gt;</td>
<td><code>{</code> <i>String</i> <code>:</code> <i>[QryElem]</i> <code>}</code></td>
</tr>
<tr>
<td><i>QryElem</i></td>
<td>-&gt;</td>
<td><code>"</code> <code>$</code> <i>UIdent</i> <code>"</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>QryValue</i></td>
</tr>
<tr>
<td><i>QryValue</i></td>
<td>-&gt;</td>
<td><i>QryGrndLit</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>QryArray</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>QryTerm</i></td>
</tr>
<tr>
<td><i>QryArray</i></td>
<td>-&gt;</td>
<td><code>[</code> <i>[QryValue]</i> <code>]</code></td>
</tr>
<tr>
<td><i>QryGrndLit</i></td>
<td>-&gt;</td>
<td><i>String</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>QryNum</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>QryBool</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>null</code></td>
</tr>
<tr>
<td><i>QryBool</i></td>
<td>-&gt;</td>
<td><code>true</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>false</code></td>
</tr>
<tr>
<td><i>QryNum</i></td>
<td>-&gt;</td>
<td><i>Integer</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>Double</i></td>
</tr>
<tr>
<td><i>URI</i></td>
<td>-&gt;</td>
<td><i>URIScheme</i> <code>:</code> <i>URIPath</i></td>
</tr>
<tr>
<td><i>URIPath</i></td>
<td>-&gt;</td>
<td><code>/</code> <i>URILocation</i> <i>URIRelativePath</i></td>
</tr>
<tr>
<td><i>URILocation</i></td>
<td>-&gt;</td>
<td><i>URIRoot</i> <i>URIRsrcLocation</i></td>
</tr>
<tr>
<td><i>URIRsrcLocation</i></td>
<td>-&gt;</td>
<td><i>NetLocation</i> <code>:</code> <i>Port</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>NetLocation</i></td>
</tr>
<tr>
<td><i>URIRelativePath</i></td>
<td>-&gt;</td>
<td><i>URIRoot</i> <i>[URIPathElement]</i></td>
</tr>
<tr>
<td><i>URIRoot</i></td>
<td>-&gt;</td>
<td><code>/</code></td>
</tr>
<tr>
<td><i>NetLocation</i></td>
<td>-&gt;</td>
<td><i>[DNSElement]</i></td>
</tr>
<tr>
<td><i>URIScheme</i></td>
<td>-&gt;</td>
<td><i>Ident</i></td>
</tr>
<tr>
<td><i>URIPathElement</i></td>
<td>-&gt;</td>
<td><i>Ident</i></td>
</tr>
<tr>
<td><i>DNSElement</i></td>
<td>-&gt;</td>
<td><i>Ident</i></td>
</tr>
<tr>
<td><i>Port</i></td>
<td>-&gt;</td>
<td><i>Integer</i></td>
</tr>
<tr>
<td><i>[QryElem]</i></td>
<td>-&gt;</td>
<td><b>eps</b></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>QryElem</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>QryElem</i> <code>,</code> <i>[QryElem]</i></td>
</tr>
<tr>
<td><i>[QryValue]</i></td>
<td>-&gt;</td>
<td><b>eps</b></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>QryValue</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>QryValue</i> <code>,</code> <i>[QryValue]</i></td>
</tr>
<tr>
<td><i>[SubstPair]</i></td>
<td>-&gt;</td>
<td><b>eps</b></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>SubstPair</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>SubstPair</i> <code>,</code> <i>[SubstPair]</i></td>
</tr>
<tr>
<td><i>[URIPathElement]</i></td>
<td>-&gt;</td>
<td><b>eps</b></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>URIPathElement</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>URIPathElement</i> <code>/</code> <i>[URIPathElement]</i></td>
</tr>
<tr>
<td><i>[DNSElement]</i></td>
<td>-&gt;</td>
<td><b>eps</b></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>DNSElement</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>DNSElement</i> <code>.</code> <i>[DNSElement]</i></td>
</tr>
</table>


<!-- xhtml code generated by txt2tags 2.5 (http://txt2tags.sf.net) -->
<!-- cmdline: txt2tags -t xhtml DocseleKt.txt -->
</body></html>
