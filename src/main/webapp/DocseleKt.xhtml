<?xml version="1.0"
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>The Language seleKt</title>
<meta name="generator" content="http://txt2tags.sf.net" />
</head>
<body bgcolor="white" text="black">
<div align="center">
<h1>The Language seleKt</h1>
<h2>BNF Converter</h2>
</div>

<p>
This document was automatically generated by the <i>BNF-Converter</i>. It was generated together with the lexer, the parser, and the abstract syntax module, which guarantees that the document matches with the implementation of the language (provided no hand-hacking has taken place).
</p>
<h2>The lexical structure of seleKt</h2>
<h3>Identifiers</h3>
<p>
Identifiers <i>Ident</i> are unquoted strings beginning with a letter,
followed by any combination of letters, digits, and the characters <code>_ '</code>
reserved words excluded.
</p>
<h3>Literals</h3>
<p>
Integer literals <i>Integer</i> are nonempty sequences of digits.
</p>
<p>
Double-precision float literals <i>Double</i> have the structure
indicated by the regular expression <code>digit+ '.' digit+ ('e' ('-')? digit+)?</code> i.e.\
two sequences of digits separated by a decimal point, optionally
followed by an unsigned or negative exponent.
</p>
<p>
String literals <i>String</i> have the form
<code>"</code><i>x</i><code>"</code>}, where <i>x</i> is any sequence of any characters
except <code>"</code> unless preceded by <code>\</code>.
</p>
<p>
Character literals <i>Char</i> have the form
<code>'</code><i>c</i><code>'</code>, where <i>c</i> is any single character.
</p>
<p>
UIdent literals are recognized by the regular expression
<code>`</code>upper (letter | digit | '_')*<code>`</code>
</p>
<p>
Wild literals are recognized by the regular expression
<code>`</code>'_'<code>`</code>
</p>
<h3>Reserved words and symbols</h3>
<p>
The set of reserved words is the set of terminals appearing in the grammar. Those reserved words that consist of non-letter characters are called symbols, and they are treated in a different way from those that are similar to identifiers. The lexer follows rules familiar from languages like Haskell, C, and Java, including longest match and spacing conventions.
</p>
<p>
The reserved words used in seleKt are the following:
</p>
<table align="center" cellpadding="4">
<tr>
<td><code>Nil</code></td>
<td><code>false</code></td>
<td><code>in</code></td>
<td><code>lambda</code></td>
</tr>
<tr>
<td><code>let</code></td>
<td><code>newPrompt</code></td>
<td><code>null</code></td>
<td><code>pushPrompt</code></td>
</tr>
<tr>
<td><code>pushSubCont</code></td>
<td><code>record</code></td>
<td><code>store</code></td>
<td><code>true</code></td>
</tr>
<tr>
<td><code>wire</code></td>
<td><code>withSubCont</code></td>
<td></td>
</tr>
</table>

<p>
The symbols used in seleKt are the following:
</p>
<table align="center" cellpadding="4">
<tr>
<td>&amp;</td>
<td>|</td>
<td>::</td>
<td>(</td>
</tr>
<tr>
<td>)</td>
<td>=</td>
<td>{:</td>
<td>:</td>
</tr>
<tr>
<td>:}</td>
<td>_</td>
<td>{</td>
<td>}</td>
</tr>
<tr>
<td>&lt;-</td>
<td colspan="2">? |</td>
<td>| ~</td>
</tr>
<tr>
<td>&lt;</td>
<td>&gt;</td>
<td>;</td>
<td>.</td>
</tr>
<tr>
<td>@</td>
<td>+</td>
<td>*</td>
<td>-</td>
</tr>
<tr>
<td>!</td>
<td>[</td>
<td>]</td>
<td>==</td>
</tr>
<tr>
<td>&lt;=</td>
<td>&gt;=</td>
<td>/</td>
<td>,</td>
</tr>
</table>

<h3>Comments</h3>
<p>
Single-line comments begin with //.Multiple-line comments are  enclosed with /* and */.
</p>
<h2>The syntactic structure of seleKt</h2>
<p>
Non-terminals are enclosed between &lt; and &gt;. 
The symbols -&gt; (production),  <b>|</b>  (union) 
and <b>eps</b> (empty rule) belong to the BNF notation. 
All other symbols are terminals.
</p>
<table align="center" cellpadding="4">
<tr>
<td><i>RecordExpr</i></td>
<td>-&gt;</td>
<td><i>RecordExpr</i> <code>&amp;</code> <i>RecordExpr1</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>RecordExpr1</i> <code>|</code> <i>RecordExpr2</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>RecordExpr1</i></td>
</tr>
<tr>
<td><i>RecordExpr2</i></td>
<td>-&gt;</td>
<td><i>DomainExpr</i> <code>::</code> <i>RecordExpr3</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>RecordExpr3</i></td>
</tr>
<tr>
<td><i>RecordExpr3</i></td>
<td>-&gt;</td>
<td><code>let</code> <i>[Binding]</i> <code>in</code> <i>RecordExpr3</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>RecordVariable</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>record</code> <i>CollectionExpr</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>Nil</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>(</code> <i>RecordExpr</i> <code>)</code></td>
</tr>
<tr>
<td><i>RecordExpr1</i></td>
<td>-&gt;</td>
<td><i>RecordExpr2</i></td>
</tr>
<tr>
<td><i>Binding</i></td>
<td>-&gt;</td>
<td><i>RecordPtn</i> <code>=</code> <i>RecordPtn</i></td>
</tr>
<tr>
<td><i>RecordPtn</i></td>
<td>-&gt;</td>
<td><code>{:</code> <i>[DomainPtn]</i> <code>:</code> <i>RecordPtn</i> <code>:}</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>RecordExpr</i></td>
</tr>
<tr>
<td><i>RecordVariable</i></td>
<td>-&gt;</td>
<td><i>UIdent</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>_</code></td>
</tr>
<tr>
<td><i>CollectionExpr</i></td>
<td>-&gt;</td>
<td><i>ExtensionBodyExpr</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>IntensionBodyExpr</i></td>
</tr>
<tr>
<td><i>ExtensionBodyExpr</i></td>
<td>-&gt;</td>
<td><code>{</code> <i>[DomainExpr]</i> <code>}</code></td>
</tr>
<tr>
<td><i>IntensionBodyExpr</i></td>
<td>-&gt;</td>
<td><code>{</code> <i>DomainPtn</i> <code>|</code> <i>[DomainDeclOrCond]</i> <code>}</code></td>
</tr>
<tr>
<td><i>DomainDeclOrCond</i></td>
<td>-&gt;</td>
<td><i>DomainCond</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>DomainGen</i></td>
</tr>
<tr>
<td><i>DomainGen</i></td>
<td>-&gt;</td>
<td><i>DomainPtn</i> <code>&lt;-</code> <i>RecordSource</i></td>
</tr>
<tr>
<td><i>DomainCond</i></td>
<td>-&gt;</td>
<td><i>DomainPtn</i> <code>in</code> <i>DomainCondition</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>ValueExpr</i> <i>Comparison</i> <i>ValueExpr</i></td>
</tr>
<tr>
<td><i>DomainPtn</i></td>
<td>-&gt;</td>
<td><code>?</code> <i>RLambdaPCtxt</i></td>
</tr>
<tr>
<td><i>DomainExpr</i></td>
<td>-&gt;</td>
<td><i>RLambdaExpr</i></td>
</tr>
<tr>
<td><i>RecordSource</i></td>
<td>-&gt;</td>
<td><i>RecordExpr</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>store</code> <i>StoreURL</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>wire</code> <i>WireURL</i></td>
</tr>
<tr>
<td><i>DomainCondition</i></td>
<td>-&gt;</td>
<td><i>DomainCondition</i> <code>||</code> <i>DomainCondition1</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>DomainCondition1</i></td>
</tr>
<tr>
<td><i>DomainCondition1</i></td>
<td>-&gt;</td>
<td><i>DomainCondition1</i> <code>&amp;</code> <i>DomainCondition2</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>DomainCondition2</i></td>
</tr>
<tr>
<td><i>DomainCondition2</i></td>
<td>-&gt;</td>
<td><code>~</code> <i>DomainCondition2</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>(</code> <i>DomainCondition</i> <code>)</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>?</code> <i>RLambdaLCtxt</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>Modality</i> <i>DomainCondition2</i></td>
</tr>
<tr>
<td><i>Modality</i></td>
<td>-&gt;</td>
<td><code>&lt;</code> <i>DomainCondition2</i> <code>&gt;</code></td>
</tr>
<tr>
<td><i>RLambdaPCtxt</i></td>
<td>-&gt;</td>
<td><i>RLambdaPCtxt</i> <i>[RLambdaPCtxt1]</i> <code>;</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>RLambdaPCtxt1</i></td>
</tr>
<tr>
<td><i>RLambdaPCtxt1</i></td>
<td>-&gt;</td>
<td><code>lambda</code> <i>[FormalPCtxt]</i> <code>.</code> <i>RLambdaPCtxt2</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>RLambdaPCtxt2</i></td>
</tr>
<tr>
<td><i>RLambdaPCtxt2</i></td>
<td>-&gt;</td>
<td><i>ContinuePCtxt</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>ValuePCtxt</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>FormalPCtxt</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>(</code> <i>RLambdaPCtxt</i> <code>)</code></td>
</tr>
<tr>
<td><i>ContinuePCtxt</i></td>
<td>-&gt;</td>
<td><code>pushPrompt</code> <i>RLambdaPCtxt2</i> <i>RLambdaPCtxt2</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>withSubCont</code> <i>RLambdaPCtxt2</i> <i>RLambdaPCtxt2</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>pushSubCont</code> <i>RLambdaPCtxt2</i> <i>RLambdaPCtxt2</i></td>
</tr>
<tr>
<td><i>FormalPCtxt</i></td>
<td>-&gt;</td>
<td><code>@</code> <code>&lt;</code> <i>RLambdaPCtxt2</i> <code>&gt;</code></td>
</tr>
<tr>
<td><i>ValuePCtxt</i></td>
<td>-&gt;</td>
<td><i>ValuePCtxt</i> <code>+</code> <i>ValuePCtxt1</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>ValuePCtxt1</i></td>
</tr>
<tr>
<td><i>ValuePCtxt1</i></td>
<td>-&gt;</td>
<td><i>ValuePCtxt1</i> <code>*</code> <i>ValuePCtxt2</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>ValuePCtxt2</i></td>
</tr>
<tr>
<td><i>ValuePCtxt2</i></td>
<td>-&gt;</td>
<td><code>-</code> <i>ValuePCtxt3</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>ValuePCtxt3</i></td>
</tr>
<tr>
<td><i>ValuePCtxt3</i></td>
<td>-&gt;</td>
<td><code>!</code> <i>ValueLiteral</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>ValuePCtxtHole</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>[</code> <i>ValuePCtxt</i> <code>]</code></td>
</tr>
<tr>
<td><i>RLambdaLCtxt</i></td>
<td>-&gt;</td>
<td><i>RLambdaLCtxt</i> <i>[RLambdaLCtxt1]</i> <code>;</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>RLambdaLCtxt1</i></td>
</tr>
<tr>
<td><i>RLambdaLCtxt1</i></td>
<td>-&gt;</td>
<td><code>lambda</code> <i>[FormalLCtxt]</i> <code>.</code> <i>RLambdaLCtxt2</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>RLambdaLCtxt2</i></td>
</tr>
<tr>
<td><i>RLambdaLCtxt2</i></td>
<td>-&gt;</td>
<td><i>ContinueLCtxt</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>FormalLCtxt</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>ValueLCtxt</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>(</code> <i>RLambdaLCtxt</i> <code>)</code></td>
</tr>
<tr>
<td><i>ContinueLCtxt</i></td>
<td>-&gt;</td>
<td><code>pushPrompt</code> <i>RLambdaLCtxt2</i> <i>RLambdaLCtxt2</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>withSubCont</code> <i>RLambdaLCtxt2</i> <i>RLambdaLCtxt2</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>pushSubCont</code> <i>RLambdaLCtxt2</i> <i>RLambdaLCtxt2</i></td>
</tr>
<tr>
<td><i>FormalLCtxt</i></td>
<td>-&gt;</td>
<td><code>@</code> <code>&lt;</code> <i>RLambdaLCtxt2</i> <code>&gt;</code></td>
</tr>
<tr>
<td><i>ValueLCtxt</i></td>
<td>-&gt;</td>
<td><i>ValueLCtxt</i> <code>+</code> <i>ValueLCtxt1</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>ValueLCtxt1</i></td>
</tr>
<tr>
<td><i>ValueLCtxt1</i></td>
<td>-&gt;</td>
<td><i>ValueLCtxt1</i> <code>*</code> <i>ValueLCtxt2</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>ValueLCtxt2</i></td>
</tr>
<tr>
<td><i>ValueLCtxt2</i></td>
<td>-&gt;</td>
<td><code>-</code> <i>ValueLCtxt3</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>ValueLCtxt3</i></td>
</tr>
<tr>
<td><i>ValueLCtxt3</i></td>
<td>-&gt;</td>
<td><code>!</code> <i>ValueLiteral</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>ValueLCtxtHole</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>[</code> <i>ValueLCtxt</i> <code>]</code></td>
</tr>
<tr>
<td><i>ValuePCtxtHole</i></td>
<td>-&gt;</td>
<td><i>UIdent</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>Wild</i></td>
</tr>
<tr>
<td><i>ValueLCtxtHole</i></td>
<td>-&gt;</td>
<td><i>LogicalGround</i></td>
</tr>
<tr>
<td><i>LogicalGround</i></td>
<td>-&gt;</td>
<td><code>true</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>false</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>null</code></td>
</tr>
<tr>
<td><i>Comparison</i></td>
<td>-&gt;</td>
<td><code>==</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>&lt;</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>&gt;</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>&lt;=</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>&gt;=</code></td>
</tr>
<tr>
<td><i>RLambdaExpr</i></td>
<td>-&gt;</td>
<td><i>RLambdaExpr</i> <i>[RLambdaExpr1]</i> <code>;</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>RLambdaExpr1</i></td>
</tr>
<tr>
<td><i>RLambdaExpr1</i></td>
<td>-&gt;</td>
<td><code>lambda</code> <i>[FormalExpr]</i> <code>.</code> <i>RLambdaExpr2</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>ContinueExpr</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>RLambdaExpr2</i></td>
</tr>
<tr>
<td><i>RLambdaExpr2</i></td>
<td>-&gt;</td>
<td><i>FormalExpr</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>ValueExpr</i></td>
</tr>
<tr>
<td><i>ContinueExpr</i></td>
<td>-&gt;</td>
<td><code>newPrompt</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>pushPrompt</code> <i>RLambdaExpr2</i> <i>RLambdaExpr2</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>withSubCont</code> <i>RLambdaExpr2</i> <i>RLambdaExpr2</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>pushSubCont</code> <i>RLambdaExpr2</i> <i>RLambdaExpr2</i></td>
</tr>
<tr>
<td><i>FormalExpr</i></td>
<td>-&gt;</td>
<td><code>@</code> <code>&lt;</code> <i>RLambdaExpr2</i> <code>&gt;</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>Ident</i></td>
</tr>
<tr>
<td><i>ValueExpr</i></td>
<td>-&gt;</td>
<td><i>ValueExpr</i> <code>+</code> <i>ValueExpr1</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>ValueExpr1</i></td>
</tr>
<tr>
<td><i>ValueExpr1</i></td>
<td>-&gt;</td>
<td><i>ValueExpr1</i> <code>*</code> <i>ValueExpr2</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>ValueExpr2</i></td>
</tr>
<tr>
<td><i>ValueExpr2</i></td>
<td>-&gt;</td>
<td><code>-</code> <i>ValueExpr3</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>ValueExpr3</i></td>
</tr>
<tr>
<td><i>ValueExpr3</i></td>
<td>-&gt;</td>
<td><i>ValueLiteral</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>[</code> <i>ValueExpr</i> <code>]</code></td>
</tr>
<tr>
<td><i>ValueLiteral</i></td>
<td>-&gt;</td>
<td><code>!</code> <i>RecordExpr3</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><code>(</code> <i>RLambdaExpr</i> <code>)</code></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>Integer</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>Double</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>String</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>Char</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>URL</i></td>
</tr>
<tr>
<td><i>StoreURL</i></td>
<td>-&gt;</td>
<td><i>URL</i></td>
</tr>
<tr>
<td><i>WireURL</i></td>
<td>-&gt;</td>
<td><i>URL</i></td>
</tr>
<tr>
<td><i>URL</i></td>
<td>-&gt;</td>
<td><code>&lt;</code> <i>URLScheme</i> <code>:</code> <i>URLPath</i> <code>&gt;</code></td>
</tr>
<tr>
<td><i>URLPath</i></td>
<td>-&gt;</td>
<td><code>/</code> <i>URLLocation</i> <i>URLRelativePath</i></td>
</tr>
<tr>
<td><i>URLLocation</i></td>
<td>-&gt;</td>
<td><i>URLRoot</i> <i>URLRsrcLocation</i></td>
</tr>
<tr>
<td><i>URLRsrcLocation</i></td>
<td>-&gt;</td>
<td><i>NetLocation</i> <code>:</code> <i>Port</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>NetLocation</i></td>
</tr>
<tr>
<td><i>URLRelativePath</i></td>
<td>-&gt;</td>
<td><i>URLRoot</i> <i>[URLPathElement]</i></td>
</tr>
<tr>
<td><i>URLRoot</i></td>
<td>-&gt;</td>
<td><code>/</code></td>
</tr>
<tr>
<td><i>NetLocation</i></td>
<td>-&gt;</td>
<td><i>[DNSElement]</i></td>
</tr>
<tr>
<td><i>URLScheme</i></td>
<td>-&gt;</td>
<td><i>Ident</i></td>
</tr>
<tr>
<td><i>URLPathElement</i></td>
<td>-&gt;</td>
<td><i>Ident</i></td>
</tr>
<tr>
<td><i>DNSElement</i></td>
<td>-&gt;</td>
<td><i>Ident</i></td>
</tr>
<tr>
<td><i>Port</i></td>
<td>-&gt;</td>
<td><i>Integer</i></td>
</tr>
<tr>
<td><i>[Binding]</i></td>
<td>-&gt;</td>
<td><b>eps</b></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>Binding</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>Binding</i> <code>,</code> <i>[Binding]</i></td>
</tr>
<tr>
<td><i>[DomainDeclOrCond]</i></td>
<td>-&gt;</td>
<td><b>eps</b></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>DomainDeclOrCond</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>DomainDeclOrCond</i> <code>,</code> <i>[DomainDeclOrCond]</i></td>
</tr>
<tr>
<td><i>[DomainExpr]</i></td>
<td>-&gt;</td>
<td><b>eps</b></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>DomainExpr</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>DomainExpr</i> <code>,</code> <i>[DomainExpr]</i></td>
</tr>
<tr>
<td><i>[DomainPtn]</i></td>
<td>-&gt;</td>
<td><b>eps</b></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>DomainPtn</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>DomainPtn</i> <code>,</code> <i>[DomainPtn]</i></td>
</tr>
<tr>
<td><i>[FormalExpr]</i></td>
<td>-&gt;</td>
<td><b>eps</b></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>FormalExpr</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>FormalExpr</i> <code>,</code> <i>[FormalExpr]</i></td>
</tr>
<tr>
<td><i>[RLambdaExpr1]</i></td>
<td>-&gt;</td>
<td><b>eps</b></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>RLambdaExpr1</i> <i>[RLambdaExpr1]</i></td>
</tr>
<tr>
<td><i>[FormalPCtxt]</i></td>
<td>-&gt;</td>
<td><b>eps</b></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>FormalPCtxt</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>FormalPCtxt</i> <code>,</code> <i>[FormalPCtxt]</i></td>
</tr>
<tr>
<td><i>[RLambdaPCtxt1]</i></td>
<td>-&gt;</td>
<td><b>eps</b></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>RLambdaPCtxt1</i> <i>[RLambdaPCtxt1]</i></td>
</tr>
<tr>
<td><i>[FormalLCtxt]</i></td>
<td>-&gt;</td>
<td><b>eps</b></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>FormalLCtxt</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>FormalLCtxt</i> <code>,</code> <i>[FormalLCtxt]</i></td>
</tr>
<tr>
<td><i>[RLambdaLCtxt1]</i></td>
<td>-&gt;</td>
<td><b>eps</b></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>RLambdaLCtxt1</i> <i>[RLambdaLCtxt1]</i></td>
</tr>
<tr>
<td><i>[URLPathElement]</i></td>
<td>-&gt;</td>
<td><b>eps</b></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>URLPathElement</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>URLPathElement</i> <code>/</code> <i>[URLPathElement]</i></td>
</tr>
<tr>
<td><i>[DNSElement]</i></td>
<td>-&gt;</td>
<td><b>eps</b></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>DNSElement</i></td>
</tr>
<tr>
<td></td>
<td align="center"><b>|</b></td>
<td><i>DNSElement</i> <code>.</code> <i>[DNSElement]</i></td>
</tr>
</table>


<!-- xhtml code generated by txt2tags 2.5 (http://txt2tags.sf.net) -->
<!-- cmdline: txt2tags -t xhtml DocseleKt.txt -->
</body></html>
